files:
  "/opt/elasticbeanstalk/hooks/appdeploy/post/100_update_supervisor.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      chown ec2-user:ec2-user /opt/python/etc/supervisord.conf
      chown ec2-user:ec2-user /opt/python/run/supervisor.sock
      source /opt/python/current/env

      if [ "$WORKER_ENV" == "true" ]; then
      cat /opt/python/current/app/supervisord.conf > /opt/python/etc/supervisord.conf
      su - ec2-user -c "supervisorctl -c /opt/python/etc/supervisord.conf stop all"
      su - ec2-user -c "supervisorctl -c /opt/python/etc/supervisord.conf reread"
      su - ec2-user -c "supervisorctl -c /opt/python/etc/supervisord.conf update"
      su - ec2-user -c "supervisorctl -c /opt/python/etc/supervisord.conf restart httpd"
      su - ec2-user -c "supervisorctl -c /opt/python/etc/supervisord.conf restart crawler_worker"
      fi

      if [ "$WEB_ENV" == "true" ]; then
      cat /opt/python/current/app/supervisord.conf > /opt/python/etc/supervisord.conf
      su - ec2-user -c "supervisorctl -c /opt/python/etc/supervisord.conf stop all"
      su - ec2-user -c "supervisorctl -c /opt/python/etc/supervisord.conf reread"
      su - ec2-user -c "supervisorctl -c /opt/python/etc/supervisord.conf update"
      su - ec2-user -c "supervisorctl -c /opt/python/etc/supervisord.conf restart httpd"
      su - ec2-user -c "supervisorctl -c /opt/python/etc/supervisord.conf restart crawler_monitor"
      fi


  "/opt/elasticbeanstalk/hooks/configdeploy/post/100_update_supervisor.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      bash /opt/elasticbeanstalk/hooks/appdeploy/post/100_update_supervisor.sh

  "/opt/elasticbeanstalk/hooks/postinit/100_update_supervisor.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      bash /opt/elasticbeanstalk/hooks/appdeploy/post/100_update_supervisor.sh

container_commands:
  01_migrate:
    command: "source /opt/python/run/venv/bin/activate && python manage.py migrate"
    leader_only: true
  02_collectstatic:
    command: "source /opt/python/run/venv/bin/activate && python manage.py collectstatic --noinput"
  09_download:
    command: "wget http://aws-cloudwatch.s3.amazonaws.com/downloads/CloudWatchMonitoringScripts-1.2.1.zip"
    ignoreErrors: true
  10_extract:
    command: "unzip CloudWatchMonitoringScripts-1.2.1.zip"
    ignoreErrors: true
  11_rmzip:
    command: "rm CloudWatchMonitoringScripts-1.2.1.zip"
    ignoreErrors: true
  12_prereq:
    command: "yum install -y perl-Switch perl-DateTime perl-Sys-Syslog perl-LWP-Protocol-https"
    ignoreErrors: false
  13_cdinto:
    command: "mv aws-scripts-mon/ /home/ec2-user"
    ignoreErrors: true
  14_cron:
    command: "crontab -l | grep -q 'mon-put-instance-data.pl' || crontab -l | { cat; echo '* * * * * /home/ec2-user/aws-scripts-mon/mon-put-instance-data.pl --mem-util --mem-used --mem-avail'; } | crontab -"
    ignoreErrors: false

option_settings:
  "aws:elasticbeanstalk:application:environment":
    DJANGO_SETTINGS_MODULE: "crawler.settings"
  "aws:elasticbeanstalk:container:python":
    WSGIPath: crawler/wsgi.py
  "aws:elasticbeanstalk:container:python:staticfiles":
    /static/: "static/"

commands:
  WSGIPassAuthorization:
    command: sed -i.bak '/WSGIScriptAlias/ a WSGIPassAuthorization On' config.py
    cwd: /opt/elasticbeanstalk/hooks